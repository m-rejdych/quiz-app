generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id Int @id @default(autoincrement())
  email String @unique
  password String
  username String
  profile Profile?
  quizes Quiz[]
  players Player[]
}

model Profile {
  id Int @id @default(autoincrement())
  userId Int @unique
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  firstName String?
  lastName String?
  avatarUrl String?
  genderId Int?
  gender Gender? @relation(fields: [genderId], references: [id])
}

model Gender {
  id Int @id
  type String @unique
  profiles Profile[]
}

model Quiz {
  id Int @id @default(autoincrement())
  authorId Int
  author User @relation(fields: [authorId], references: [id], onDelete: Cascade)
  title String
  questions Question[]
  results GameResult[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt @default(now())
}

model Question {
  id Int @id @default(autoincrement())
  quizId Int
  quiz Quiz @relation(fields: [quizId], references: [id], onDelete: Cascade)
  title String
  answers Answer[]
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
}

model Answer {
  id Int @id @default(autoincrement())
  questionId Int
  question Question @relation(fields: [questionId], references: [id], onDelete: Cascade)
  content String
  isCorrect Boolean
  players AnswerOnPlayer[]
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
}

model GameResult {
  id Int @id @default(autoincrement())
  quizId Int
  quiz Quiz @relation(fields: [quizId], references: [id])
  players Player[]
  createdAt DateTime @default(now())
}

model Player {
  id Int @id @default(autoincrement())
  userId Int
  gameResultId Int
  score Int
  user User @relation(fields: [userId], references: [id])
  gameResult GameResult @relation(fields: [gameResultId], references: [id], onDelete: Cascade)
  answers AnswerOnPlayer[]
}

model AnswerOnPlayer {
  playerId Int
  answerId Int
  player Player @relation(fields: [playerId], references: [id], onDelete: Cascade)
  answer Answer @relation(fields: [answerId], references: [id])

  @@id([playerId, answerId])
}
